name: build_deploy

on:
  push:
    branches: [ main ]
  pull_request:
  repository_dispatch:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  #
  # Build the Jekyll site
  #
  build-site:
    name: Build site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Calculate cache key
        id: cache-key
        run: |
          echo "cache-key=$(scripts/metacachekey jekyll _config.yml)" >> $GITHUB_OUTPUT
      - name: Restore cache
        id: cache
        uses: actions/cache@v4
        with:
          path: _site
          key: ${{ steps.cache-key.outputs.cache-key }}
      - name: Use Ruby
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Build site
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          bundle exec jekyll build
      - name: Save artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jekyll-site
          path: _site

  #
  # For each document category (administrative, standard, etc.),
  # build using `metanorma site generate`.
  #
  build-docs:
    name: Build ${{ matrix.doc_type }} docs
    runs-on: ubuntu-latest
    container:
      image: metanorma/metanorma:latest
    strategy:
      matrix:
        doc_type:
          - site
          - administrative
          - directive
          - pending-publication
          - public-review
          - report
          - specification
          - standard
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 1

      - name: Metanorma generate site
        uses: actions-mn/build-and-publish@main
        with:
          destination: artifact
          agree-to-terms: true
          output-dir: _site/${{ matrix.doc_type }}
          artifact-name: metanorma-${{ matrix.doc_type }}-docs
          source-path: src-documents
          config-file: metanorma-${{ matrix.doc_type }}.yml

  #
  # At the very end, integrate them all with Jekyll.
  #
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [build-site, build-docs]
    steps:
      - name: Download Jekyll artifacts
        uses: actions/download-artifact@v4
        with:
          name: jekyll-site
          path: _site
      - name: Download all doc artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: "metanorma-*-docs"
          path: _site
          merge-multiple: true
      - name: Debug
        run: |
          ls -l
          ls -l _site || :
          ls -l _site/administrative || :
          ls -l _site/standards || :
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
